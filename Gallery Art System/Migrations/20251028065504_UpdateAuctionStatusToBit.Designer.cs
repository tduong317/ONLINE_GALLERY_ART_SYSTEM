// <auto-generated />
using System;
using Gallery_Art_System.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gallery_Art_System.Migrations
{
    [DbContext(typeof(ONLINE_GALLERY_ART_SYSTEMContext))]
    [Migration("20251028065504_UpdateAuctionStatusToBit")]
    partial class UpdateAuctionStatusToBit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Gallery_Art_System.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Artwork", b =>
                {
                    b.Property<int>("ArtworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("artwork_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtworkId"), 1L, 1);

                    b.Property<int?>("ArtistId")
                        .HasColumnType("int")
                        .HasColumnName("artist_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image_url");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("price");

                    b.Property<string>("SaleType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("sale_type")
                        .HasDefaultValueSql("('FIXED')");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("('AVAILABLE')");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.HasKey("ArtworkId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Artwork", (string)null);
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Auction", b =>
                {
                    b.Property<int>("AuctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("auction_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuctionId"), 1L, 1);

                    b.Property<string>("ApprovalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArtworkId")
                        .HasColumnType("int")
                        .HasColumnName("artwork_id");

                    b.Property<decimal?>("CurrentPrice")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("current_price");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time");

                    b.Property<decimal>("StartPrice")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("start_price");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("('ONGOING')");

                    b.HasKey("AuctionId");

                    b.HasIndex("ArtworkId");

                    b.ToTable("Auction", (string)null);
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Bid", b =>
                {
                    b.Property<int>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bid_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("amount");

                    b.Property<int>("AuctionId")
                        .HasColumnType("int")
                        .HasColumnName("auction_id");

                    b.Property<DateTime?>("BidTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bid_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("BidId");

                    b.HasIndex("AuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("Bid", (string)null);
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Config", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hotline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkVideo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkVideo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkVideo3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialLink1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialLink2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialLink3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Config");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Contact", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("message_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("SentAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sent_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Subject")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("subject");

                    b.HasKey("MessageId")
                        .HasName("PK__contact___0BBF6EE61D7F359C");

                    b.ToTable("Contact", (string)null);
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Exhibition", b =>
                {
                    b.Property<int>("ExhibitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("exhibition_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExhibitionId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image_url");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("ExhibitionId");

                    b.ToTable("Exhibition", (string)null);
                });

            modelBuilder.Entity("Gallery_Art_System.Models.ExhibitionRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("request_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"), 1L, 1);

                    b.Property<int>("ArtworkId")
                        .HasColumnType("int")
                        .HasColumnName("artwork_id");

                    b.Property<int>("ExhibitionId")
                        .HasColumnType("int")
                        .HasColumnName("exhibition_id");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("status")
                        .HasDefaultValueSql("('PENDING')");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("RequestId")
                        .HasName("PK__exhibiti__18D3B90FEA1C0401");

                    b.HasIndex("ArtworkId");

                    b.HasIndex("ExhibitionId");

                    b.HasIndex("UserId");

                    b.ToTable("Exhibition_request", (string)null);
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Gallery", b =>
                {
                    b.Property<int>("GalleryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("gallery_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GalleryId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("name");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("GalleryId");

                    b.HasIndex("UserId");

                    b.ToTable("Gallery", (string)null);
                });

            modelBuilder.Entity("Gallery_Art_System.Models.GalleryArtwork", b =>
                {
                    b.Property<int>("GalleryId")
                        .HasColumnType("int")
                        .HasColumnName("gallery_id");

                    b.Property<int>("ArtworkId")
                        .HasColumnType("int")
                        .HasColumnName("artwork_id");

                    b.Property<DateTime?>("AddedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("added_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("GalleryId", "ArtworkId")
                        .HasName("PK__gallery___EFC61B7C0ACF6BBE");

                    b.HasIndex("ArtworkId");

                    b.ToTable("Gallery_artwork", (string)null);
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int>("ArtworkId")
                        .HasColumnType("int")
                        .HasColumnName("artwork_id");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("order_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("('PENDING')");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("total_amount");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("OrderId");

                    b.HasIndex("ArtworkId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Keyword")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Level")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Link")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Ord")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Tag")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Target")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Page", (string)null);
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"), 1L, 1);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("amount");

                    b.Property<string>("Method")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("method");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<DateTime?>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("payment_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("('PENDING')");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrderId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("review_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"), 1L, 1);

                    b.Property<int>("ArtworkId")
                        .HasColumnType("int")
                        .HasColumnName("artwork_id");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ReviewId");

                    b.HasIndex("ArtworkId");

                    b.HasIndex("UserId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("Gallery_Art_System.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("full_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gender");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "Email" }, "UQ__users__AB6E61641EE8BD28")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex(new[] { "Username" }, "UQ__users__F3DBC572D70F49A1")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Artwork", b =>
                {
                    b.HasOne("Gallery_Art_System.Models.User", "Artist")
                        .WithMany("Artworks")
                        .HasForeignKey("ArtistId")
                        .HasConstraintName("FK__artwork__artist___44FF419A");

                    b.HasOne("Gallery_Art_System.Models.Category", "Category")
                        .WithMany("Artworks")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__artwork__categor__45F365D3");

                    b.Navigation("Artist");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Auction", b =>
                {
                    b.HasOne("Gallery_Art_System.Models.Artwork", "Artwork")
                        .WithMany("Auctions")
                        .HasForeignKey("ArtworkId")
                        .IsRequired()
                        .HasConstraintName("FK__auction__artwork__534D60F1");

                    b.Navigation("Artwork");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Bid", b =>
                {
                    b.HasOne("Gallery_Art_System.Models.Auction", "Auction")
                        .WithMany("Bids")
                        .HasForeignKey("AuctionId")
                        .IsRequired()
                        .HasConstraintName("FK__bid__auction_id__571DF1D5");

                    b.HasOne("Gallery_Art_System.Models.User", "User")
                        .WithMany("Bids")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__bid__user_id__5812160E");

                    b.Navigation("Auction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.ExhibitionRequest", b =>
                {
                    b.HasOne("Gallery_Art_System.Models.Artwork", "Artwork")
                        .WithMany("ExhibitionRequests")
                        .HasForeignKey("ArtworkId")
                        .IsRequired()
                        .HasConstraintName("FK__exhibitio__artwo__72C60C4A");

                    b.HasOne("Gallery_Art_System.Models.Exhibition", "Exhibition")
                        .WithMany("ExhibitionRequests")
                        .HasForeignKey("ExhibitionId")
                        .IsRequired()
                        .HasConstraintName("FK__exhibitio__exhib__73BA3083");

                    b.HasOne("Gallery_Art_System.Models.User", "User")
                        .WithMany("ExhibitionRequests")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__exhibitio__user___71D1E811");

                    b.Navigation("Artwork");

                    b.Navigation("Exhibition");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Gallery", b =>
                {
                    b.HasOne("Gallery_Art_System.Models.User", "User")
                        .WithMany("Galleries")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__gallery__user_id__49C3F6B7");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.GalleryArtwork", b =>
                {
                    b.HasOne("Gallery_Art_System.Models.Artwork", "Artwork")
                        .WithMany("GalleryArtworks")
                        .HasForeignKey("ArtworkId")
                        .IsRequired()
                        .HasConstraintName("FK__gallery_a__artwo__4E88ABD4");

                    b.HasOne("Gallery_Art_System.Models.Gallery", "Gallery")
                        .WithMany("GalleryArtworks")
                        .HasForeignKey("GalleryId")
                        .IsRequired()
                        .HasConstraintName("FK__gallery_a__galle__4D94879B");

                    b.Navigation("Artwork");

                    b.Navigation("Gallery");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Order", b =>
                {
                    b.HasOne("Gallery_Art_System.Models.Artwork", "Artwork")
                        .WithMany("Orders")
                        .HasForeignKey("ArtworkId")
                        .IsRequired()
                        .HasConstraintName("FK__orders__artwork___5EBF139D");

                    b.HasOne("Gallery_Art_System.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__orders__user_id__5DCAEF64");

                    b.Navigation("Artwork");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Payment", b =>
                {
                    b.HasOne("Gallery_Art_System.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__payment__order_i__656C112C");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Review", b =>
                {
                    b.HasOne("Gallery_Art_System.Models.Artwork", "Artwork")
                        .WithMany("Reviews")
                        .HasForeignKey("ArtworkId")
                        .IsRequired()
                        .HasConstraintName("FK__review__artwork___6A30C649");

                    b.HasOne("Gallery_Art_System.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__review__user_id__6B24EA82");

                    b.Navigation("Artwork");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Artwork", b =>
                {
                    b.Navigation("Auctions");

                    b.Navigation("ExhibitionRequests");

                    b.Navigation("GalleryArtworks");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Auction", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Category", b =>
                {
                    b.Navigation("Artworks");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Exhibition", b =>
                {
                    b.Navigation("ExhibitionRequests");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Gallery", b =>
                {
                    b.Navigation("GalleryArtworks");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.Order", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Gallery_Art_System.Models.User", b =>
                {
                    b.Navigation("Artworks");

                    b.Navigation("Bids");

                    b.Navigation("ExhibitionRequests");

                    b.Navigation("Galleries");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
